# Configuration
$monitoringRoleArn = "arn:aws:iam::123456789012:role/rds-monitoring-role"  # <-- Update this
$timestamp = Get-Date -Format "yyyyMMdd_HHmmss"
$preChangeCsv = "RDS_EnhancedMonitoring_PreChange_$timestamp.csv"
$postChangeCsv = "RDS_EnhancedMonitoring_PostChange_$timestamp.csv"
$region = "us-east-1"  # Update if needed

# Step 1: Get all DB instances
Write-Host "Fetching RDS instances......" -ForegroundColor Cyan
$rdsInstancesJson = aws rds describe-db-instances --region $region | ConvertFrom-Json
$rdsInstances = $rdsInstancesJson.DBInstances

$preChangeData = @()

foreach ($db in $rdsInstances) {
    $preChangeData += [PSCustomObject]@{
        DBInstanceIdentifier = $db.DBInstanceIdentifier
        Engine               = $db.Engine
        PubliclyAccessible   = $db.PubliclyAccessible
        MonitoringInterval   = $db.MonitoringInterval
        MonitoringRoleArn    = $db.MonitoringRoleArn
        InstanceClass        = $db.DBInstanceClass
        ARN                  = $db.DBInstanceArn
    }
}

$preChangeData | Export-Csv -Path $preChangeCsv -NoTypeInformation
Write-Host "Exported pre-change monitoring status to $preChangeCsv" -ForegroundColor Green

# Step 2: Enable Enhanced Monitoring where disabled
Write-Host "Enabling Enhanced Monitoring......" -ForegroundColor Cyan

foreach ($db in $preChangeData) {
    if ($db.MonitoringInterval -eq 0) {
        Write-Host " - Enabling Enhanced Monitoring for: $($db.DBInstanceIdentifier)" -ForegroundColor Yellow

        aws rds modify-db-instance `
            --db-instance-identifier $db.DBInstanceIdentifier `
            --monitoring-interval 60 `
            --monitoring-role-arn $monitoringRoleArn `
            --apply-immediately `
            --region $region | Out-Null
    }
}

# Step 3: Pause to allow propagation
Write-Host "Waiting 60 Seconds for settings to apply......" -ForegroundColor Cyan
Start-Sleep -Seconds 60

# Step 4: Re-check and export post-change status
Write-Host "Verifying updated monitoring configuration......" -ForegroundColor Cyan
$rdsInstancesJson = aws rds describe-db-instances --region $region | ConvertFrom-Json
$postChangeData = @()

foreach ($db in $rdsInstancesJson.DBInstances) {
    $postChangeData += [PSCustomObject]@{
        DBInstanceIdentifier = $db.DBInstanceIdentifier
        Engine               = $db.Engine
        PubliclyAccessible   = $db.PubliclyAccessible
        MonitoringInterval   = $db.MonitoringInterval
        MonitoringRoleArn    = $db.MonitoringRoleArn
        InstanceClass        = $db.DBInstanceClass
        ARN                  = $db.DBInstanceArn
    }
}

$postChangeData | Export-Csv -Path $postChangeCsv -NoTypeInformation
Write-Host "Exported post-change monitoring status to $postChangeCsv" -ForegroundColor Green
